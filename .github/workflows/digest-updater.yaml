on:
  workflow_dispatch:
    inputs:
      branch:
        required: true
        description: "Provide release branch name that you want to update the digests"
      n_verssion:
        required: true
        description: "Provide the N version of the notebook release ex:2023a"

jobs:
  initialize:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Install Skopeo CLI
        shell: bash
        run: |
          sudo apt-get -y update
          sudo apt-get -y install skopeo

  update-n-version:
    needs: [ initialize ]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      matrix:
        files: [ "notebook-images/base/jupyter-minimal-notebook-imagestream.yaml", "notebook-images/base/jupyter-datascience-notebook-imagestream.yaml", "notebook-images/base/jupyter-minimal-gpu-notebook-imagestream.yaml" , "notebook-images/base/jupyter-pytorch-notebook-imagestream.yaml","notebook-images/base/jupyter-tensorflow-notebook-imagestream.yaml" ]

    steps:
      - name: Configure Git
        run: |
         git config --global user.email "github-actions[bot]@users.noreply.github.com"
         git config --global user.name "GitHub Actions"

      - name: Checkout upstream notebooks repo
        uses: actions/checkout@v3
        with:
         repository: opendatahub-io/notebooks.git
         ref: 2023a

      - name: Retrive latest weekly commit hash from the release branch
        id: hash
        shell: bash
        run: |
          echo "HASH=$(git rev-parse --short HEAD)" >> ${GITHUB_OUTPUT}

      - name: Checkout main from the odh-manifest repo
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Fetch Name Image from Main Branch Image Stream (Step 1)
        shell: bash
        id: img_name
        run: |
         echo "img_name=$(yq '.spec.tags[0].from.name' ${{ matrix.files }} | sed 's/\"/\//g')" >> ${GITHUB_OUTPUT}

      - name: Checkout release branch
        uses: actions/checkout@v3
        with:
          ref:  ${{ inputs.branch }}

      - name: Fetch digest, and update the imagestream file (Step 2)
        env:
          IMG_NAME: ${{ steps.img_name.outputs.img_name }}
        run: |
          notebook=$(skopeo inspect docker://${{ env.IMG_NAME }} | jq '.Labels."io.openshift.build.image"' | cut -d':' -f2 | tr -d '"')
          regex="$notebook-${{ inputs.n_verssion }}-\d+-${{ steps.hash.outputs.HASH }}"
          echo $regex

          latest_tag=$(skopeo inspect docker://${{ env.IMG_NAME }} | jq -r --arg regex "$regex" '.RepoTags | map(select(. | test($regex))) | .[0]')
          echo $latest_tag

          digest=$(skopeo inspect docker://quay.io/opendatahub/workbench-images:$latest_tag | jq .Digest | sed 's/sha256/quay.io\/opendatahub\/workbench-images@sha256/g')
          digest=$(echo "$digest" | tr -d '"' | tr -d '\\')
          echo $digest

          yq eval '.spec.tags[0].from.name = "'$digest'"' -i ${{ matrix.files }}
          git fetch origin ${{ inputs.branch }} && git pull origin ${{ inputs.branch}} && git add ${{ matrix.files }} && git commit -m "Update file" && git push origin ${{ inputs.branch }}


# IMG_NAME=quay.io/opendatahub/workbench-images:jupyter-datascience-ubi9-python-3.9-2023a-weekly
# notebook=$(skopeo inspect docker://$IMG_NAME | jq '.Labels."io.openshift.build.image"') ->"quay.io/opendatahub/notebooks:jupyter-datascience-ubi9-python-3.9"
# notebook=$(echo $notebook | cut -d':' -f2 | tr -d '"' )
# HASH=cf92364
# notebooks_release=2023a
# regex="$notebook-$notebooks_release-\d+-$HASH"
# latest_tag=$(skopeo inspect docker://$IMG_NAME | jq -r --arg regex "$regex" '.RepoTags | map(select(. | test($regex))) | .[0]')

