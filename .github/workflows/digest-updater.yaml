# name: Image Stream Updater. 
# on:
#   workflow_dispatch:  # for manual trigger workflow from GH Web UI
#     inputs:
#       hash:
#         required: true
#         description: "Provide Git Hash (Check out the commit generated from the github-actions[bot]: https://github.com/opendatahub-io/notebooks)"
#       branch:
#         required: true
#         description: "Provide release branch name"
# jobs:
#   modify-yaml-file:
#     runs-on: ubuntu-latest
#     permissions:
#       # Give the default GITHUB_TOKEN write permission to commit and push the
#       # added or changed files to the repository.
#       contents: write

#     steps:
#       # Get the git hash provided by the user. He may find it in this link: https://github.com/opendatahub-io/notebooks/commits/2023a
#       # The user should pick the commit generated from the github-actions[bot]
#       - name: Get git-hash
#         if: github.event.inputs.hash != ''
#         run: echo "Git hash ${{ inputs.hash }}"

#       # Get the release branch, is the branch will apply the changes
#       - name: Get release branch
#         if: github.event.inputs.branch != ''
#         run: echo "Release branch name ${{ inputs.branch }}"
        
#       - name: Configure Git
#         run: |
#          git config --global user.email "github-actions[bot]@users.noreply.github.com"
#          git config --global user.name "GitHub Actions"

#       - name: Install Skopeo CLI
#         shell: bash
#         run: |
#           sudo apt-get -y update
#           sudo apt-get -y install skopeo

#       - name: Checkout main to fetch the image ref
#         uses: actions/checkout@v3
#         with:
#           ref: main

#       # Feches from .spec.tags[0].from.name
#       - name: Fetch Name Image from Main Branch Image Stream (Minimal Step 1)
#         shell: bash
#         id: img_name1
#         run: |
#          echo "img_name1=$(yq '.spec.tags[0].from.name' notebook-images/base/jupyter-minimal-notebook-imagestream.yaml | sed 's/\"/\//g')" >> ${GITHUB_OUTPUT}

#       # Checkout code from the release branch to apply the updates
#       - name: Checkout branch
#         uses: actions/checkout@v3
#         with:
#           ref: ${{ inputs.branch }}

#       # It will return the latest weekly in year index format: ex: jupyter-minimal-ubi9-python-3.9-2023a-20230327-267797c to use it on the next step
#       - name: Fetch the Latest Weekly Tag Name According to the Git-Hash Commit (Minimal Step 2)
#         shell: bash
#         id: latest_tag1
#         env:
#           IMG_NAME1: ${{ steps.img_name1.outputs.img_name1 }}
#         run: |
#          echo "latest_tag1=$(skopeo inspect docker://${{ env.IMG_NAME1 }} | jq .RepoTags | grep -E jupyter-minimal-ubi9-python-3\.9-2023a-\[0-9]+-${{ inputs.hash }} | head -n 1 | sed 's/[,"[:space:]]//g')" >> ${GITHUB_OUTPUT}

#       # Using the tag from the above step returns the result in digest format
#       - name: Return The Result in Digest Format (Minimal Step 3)
#         shell: bash
#         id: digest1
#         env:
#           LATEST_TAG1: ${{ steps.latest_tag1.outputs.latest_tag1 }}
#         run: |
#          echo digest1=$(skopeo inspect docker://quay.io/opendatahub/workbench-images:${{ env.LATEST_TAG1}} | jq .Digest | sed 's/sha256/quay.io\/opendatahub\/workbench-images@sha256/g') >> ${GITHUB_OUTPUT}

#       # Populate the Image Stream With The Digest Format and Commit the Changes
#       - name: Populate the Image Stream With The Digest Format and Commit the Changes (Minimal Step 4)
#         shell: bash
#         env:
#           DIGEST1: ${{ steps.digest1.outputs.digest1 }}
#         run: |
#          yq e '.spec.tags[0].from.name = "'"$(echo ${{ env.DIGEST1}})"'"' -i notebook-images/base/jupyter-minimal-notebook-imagestream.yaml
#          git fetch origin ${{ inputs.branch }}
#          git add notebook-images/base/jupyter-minimal-notebook-imagestream.yaml
#          git commit -m "Update file"
#          git push origin ${{ inputs.branch }}


###################### second shorter way 

# on:
#   workflow_dispatch:
#     inputs:
#       hash:
#         required: true
#         description: "Provide Git Hash (Check out the commit generated from the github-actions[bot]: https://github.com/opendatahub-io/notebooks)"
#       branch:
#         required: true
#         description: "Provide release branch name"

# jobs:
#   modify-yaml-file:
#     runs-on: ubuntu-latest
#     permissions:
#       contents: write

#     steps:
#       - name: Configure Git
#         run: |
#          git config --global user.email "github-actions[bot]@users.noreply.github.com"
#          git config --global user.name "GitHub Actions"

#       - name: Install Skopeo CLI
#         shell: bash
#         run: |
#           sudo apt-get -y update
#           sudo apt-get -y install skopeo


#       # Step 3 
#       - name: Checkout main to fetch the image ref
#         uses: actions/checkout@v3
#         with:
#           ref: main

# #       # Fetches from .spec.tags[0].from.name
#       - name: Fetch Name Image from Main Branch Image Stream (Minimal Step 1)
#         shell: bash
#         id: img_name
#         run: |
#          echo "img_name=$(yq '.spec.tags[0].from.name' notebook-images/base/jupyter-minimal-notebook-imagestream.yaml | sed 's/\"/\//g')" >> ${GITHUB_OUTPUT}

#       - name: Checkout main to fetch the image ref
#         uses: actions/checkout@v3
#         with:
#           ref:  ${{ inputs.branch }}

#       - name: Fetch image name, latest weekly tag name, and image digest
#         shell: bash
#         env: 
#          IMG_NAME: ${{ steps.img_name.outputs.img_name }}
#         run: |
#           latest_tag=$(skopeo inspect docker://${{ env.IMG_NAME }} | jq -r --arg hash ${{ inputs.hash }} '.RepoTags | map(select(. | test("jupyter-minimal-ubi9-python-3\\.9-2023a-\\d+-${{ inputs.hash }}"))) | .[0]')
#           digest=$(skopeo inspect docker://quay.io/opendatahub/workbench-images:$latest_tag |  jq .Digest | sed 's/sha256/quay.io\/opendatahub\/workbench-images@sha256/g')
#           digest=$(echo "$digest" | tr -d '"' | tr -d '\\')
#           yq e '.spec.tags[0].from.name = "'$digest'"' -i notebook-images/base/jupyter-minimal-notebook-imagestream.yaml
#           git fetch origin ${{ inputs.branch }}
#           git add notebook-images/base/jupyter-minimal-notebook-imagestream.yaml
#           git commit -m "Update file"
#           git push origin ${{ inputs.branch }}


###################



on:
  workflow_dispatch:
    inputs:
      hash:
        required: true
        description: "Provide Git Hash (Check out the commit generated from the github-actions[bot]: https://github.com/opendatahub-io/notebooks)"
      branch:
        required: true
        description: "Provide release branch name"

jobs:
  modify-yaml-file:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Configure Git
        run: |
         git config --global user.email "github-actions[bot]@users.noreply.github.com"
         git config --global user.name "GitHub Actions"

      - name: Install Skopeo CLI
        shell: bash
        run: |
          sudo apt-get -y update
          sudo apt-get -y install skopeo

      - name: Checkout main to fetch the image ref
        uses: actions/checkout@v3
        with:
          ref: main
      # # Fetches from .spec.tags[0].from.name
      # - name: Fetch Name Image from Main Branch Image Stream (Step 1)
      #   shell: bash
      #   id: img_name
      #   run: |
      #    echo "img_name=$(yq '.spec.tags[0].from.name' notebook-images/base/jupyter-datascience-notebook-imagestream.yaml | sed 's/\"/\//g')" >> ${GITHUB_OUTPUT}
      # - name: Checkout main to fetch the image ref
      #   uses: actions/checkout@v3
      #   with:
      #     ref:  ${{ inputs.branch }}
      # - name: Fetch image name, latest weekly tag name, and image digest (Step 2)
      #   run: |
      #     img_name=${{ steps.img_name.outputs.img_name }}
      #     src_tag=$(echo "$img_name" | sed 's/-2023a.*//')
      #     regex="$src_tag-2023a-\\d+-${{ inputs.hash }}"
      #     latest_tag=$(skopeo inspect docker://quay.io/opendatahub/workbench-images:"$src_tag-2023a-weekly" | jq -r --arg regex "$regex" '.RepoTags | map(select(. | test($regex))) | .[0]')
      #     digest=$(skopeo inspect "docker://$img_name" | jq -r '.Digest')
      #     yq eval '.spec.tags[0].from.name = "'quay.io/opendatahub/workbench-images@$digest'"' -i notebook-images/base/jupyter-datascience-notebook-imagestream.yaml
      #     git fetch origin ${{ inputs.branch }} && git add notebook-images/base/jupyter-datascience-notebook-imagestream.yaml && git commit -m "Update file" && git push origin ${{ inputs.branch }}

            # Loop over YAML files in notebook-images/base/ directory
      - name: Loop over YAML files
        id: loop
        run: |
          for file in notebook-images/base/*.yaml
          do
            git checkout main
            img_name=$(yq '.spec.tags[0].from.name' $file | sed 's/\"/\//g')
            echo "img_name=$img_name" >> ${GITHUB_OUTPUT}

            # Checkout branch to modify YAML file
            git checkout ${{ inputs.branch }}
            # Fetch image name, latest weekly tag name, and image digest
            src_tag=$(echo "$img_name" | sed 's/-2023a.*//')
            regex="$src_tag-2023a-\\d+-${{ inputs.hash }}"
            latest_tag=$(skopeo inspect docker://quay.io/opendatahub/workbench-images:"$src_tag-2023a-weekly" | jq -r --arg regex "$regex" '.RepoTags | map(select(. | test($regex))) | .[0]')
            digest=$(skopeo inspect "docker://$img_name" | jq -r '.Digest')
            yq eval '.spec.tags[0].from.name = "'quay.io/opendatahub/workbench-images@$digest'"' -i $file
            git fetch ${{ inputs.branch }} && git add $file && git commit -m "Update $file" && git push origin ${{ inputs.branch }}
          done







### Notes 

      # - name: Fetch image name, latest weekly tag name, and image digest
      #   shell: bash
      #   env: 
      #    IMG_NAME: ${{ steps.img_name.outputs.img_name }}
      #   run: |
      #     registry=$(echo ${{ env.IMG_NAME }}  | cut -d':' -f1)
      #     image_tag=$(echo ${{ env.IMG_NAME }}  | cut -d':' -f2)
      #     src_tag=$(echo $image_tag |  sed 's/-2023a.*//')
      #     regex="$src_tag-2023a-\\d+-${{ inputs.hash }}"
      #     latest_tag=$(skopeo inspect docker://quay.io/opendatahub/workbench-images:jupyter-minimal-ubi9-python-3.9-2023a-weekly | jq -r --arg regex "$regex" '.RepoTags | map(select(. | test($regex))) | .[0]')
      #     digest=$(skopeo inspect docker://$registry:$latest_tag |  jq .Digest | sed 's/sha256/quay.io\/opendatahub\/workbench-images@sha256/g')
      #     digest=$(echo "$digest" | tr -d '"' | tr -d '\\')
      #     yq e '.spec.tags[0].from.name = "'$digest'"' -i notebook-images/base/jupyter-datascience-notebook-imagestream.yaml
      #     git fetch origin ${{ inputs.branch }}
      #     git add notebook-images/base/jupyter-datascience-notebook-imagestream.yaml
      #     git commit -m "Update file"
      #     git push origin ${{ inputs.branch }}

